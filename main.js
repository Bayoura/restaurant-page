(()=>{"use strict";var n={28:(n,e,t)=>{t.d(e,{Z:()=>h});var o=t(537),r=t.n(o),a=t(645),i=t.n(a),A=t(667),c=t.n(A),s=new URL(t(920),t.b),d=new URL(t(933),t.b),l=new URL(t(673),t.b),u=new URL(t(391),t.b),m=i()(r()),p=c()(s),g=c()(d),f=c()(l),C=c()(u);m.push([n.id,"@font-face {\n    font-family: 'Gideon Roman';\n    src: url("+p+") format('truetype'); \n}\n@font-face {\n    font-family: 'Redressed';\n    src: url("+g+") format('truetype'); \n}\n\n*,\n*::after,\n*::before {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n    color: var(--eggshell);\n    font-family: 'Gideon Roman', Helvetica, cursive;\n}\n\n*:focus {\n    outline: 4px dotted var(--brown);\n}\n\n:root {\n    --green: hsl(103deg 13% 39%);\n    --green-80-transp: hsl(103deg 13% 39% / 80%);\n    --green-90-transp: hsl(103deg 13% 39% / 90%);\n    --eggshell: hsl(23deg 87% 94%);\n    --orange: hsl(23deg 68% 75%);\n    --brown: hsl(23deg 27% 31%);\n}\n\nbody {\n    background-image: url("+f+");\n    background-size: cover;\n    background-repeat: no-repeat;\n    background-position: center center;\n    background-attachment: fixed; /* Background image is fixed in the viewport so that it doesn’t move when the content’s height is greater than the image’s height */\n    background-color: var(--brown); /* background color that will be displayed while background image is loading */\n    display: flex;\n    justify-content: center;\n    min-height: 100vh; \n    min-width: 100vw;\n} \n\n#content {\n    background-color: hsl(0deg 100% 100% / 60%);\n    width: 1000px;\n    max-width: 85%;\n}\n\n/* -------------------NAVBAR--------------------- */\n\n.logo-container {\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n}\n\n.logo-container img {\n    height: 80px;\n}\n\nh1 {\n    color: var(--orange);\n    font-family: 'Redressed', Helvetica, cursive;\n    font-size: 4rem;\n}\n\nheader {\n    background-color: var(--green);\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 20px 35px;\n}\n\n.menu {\n    display: flex;\n    gap: 20px;\n}\n\n.nav-link {\n    background: transparent;\n    border: none;\n    cursor: pointer;\n    font-size: 1.6rem;\n    position: relative;\n}\n\n/* underline hover animation */\n.nav-link::after {\n    content: '';\n    position: absolute;\n    width: 100%;\n    transform: scaleX(0);\n    height: 2px;\n    bottom: 0;\n    left: 0;\n    background-color: var(--eggshell);\n    transform-origin: bottom right;\n    transition: transform 0.25s ease-in;\n}\n\n.nav-link:hover::after {\n    transform: scaleX(1);\n    transform-origin: bottom left;\n}\n\n\n/* ----------------------WELCOME-BOX-------------------- */\n\n.welcome-box {\n    background-color:var(--green-80-transp);\n    border: 6px solid var(--green-90-transp);\n    border-radius: 5px;\n    text-align: center;\n    padding: 20px;\n    width: 80%;\n    max-width: 700px;\n    margin: 100px auto;\n}\n\nh2 {\n    margin-top: 25px;\n    margin-bottom: 20px;\n    font-size: 2.5rem;\n}\n\n.welcome-box p {\n    font-size: 1.5rem;\n    margin-bottom: 25px;\n}\n\n.welcome-box button {\n    background-color: var(--orange);\n    border: none;\n    border-radius: 3px;\n    color: hsl(103deg 13% 28%);\n    cursor: pointer;\n    font-size: 1.7rem;\n    font-weight: bold;\n    margin-bottom: 25px;\n    padding: 15px 10px;\n    transition: 300ms ease-in;\n}\n\n.welcome-box button:hover {\n    background-color: var(--eggshell);\n    color: var(--green);\n}\n\n/* footer {\n    text-align: center;\n    font-weight: 300;\n}\n\n.attribution {\n    padding: 20px 0 10px 0;\n    font-size: 0.875rem;\n}\n\n\n.credit,\n.credit a {\n    font-size: 0.625rem; \n    padding: 5px;\n}\n\nfooter a {\n    font-style: italic;\n    font-weight: 400;\n    color: #cddef8;\n} */\n\n@media (max-width: 991px) {\n    header {\n        flex-direction: column;\n    }\n}\n\n@media (max-width: 767px) {\n    body {\n        background-image: url("+C+");\n    }\n    header {\n        padding: 15px 25px;\n    }\n    .logo-container {\n        flex-direction: column;\n    }\n    .logo-container img {\n        height: 50px;\n    }\n    h1 {\n        font-size: 3rem;\n    }\n    .menu {\n        flex-wrap: wrap;\n        justify-content: center;\n    }\n    .nav-link {\n        font-size: 1.4rem;\n    }\n    h2 {\n        font-size: 2rem;\n        margin-top: 10px;\n    }\n    .welcome-box {\n        padding: 10px;\n        margin: 40px auto;\n        width: 90%;\n    }\n    .welcome-box p {\n        font-size: 1.3rem;\n    }\n    .welcome-box button {\n        font-size: 1.5rem;\n        margin-bottom: 15px;\n        padding: 5px;\n    }\n}","",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;IACI,2BAA2B;IAC3B,+DAA8D;AAClE;AACA;IACI,wBAAwB;IACxB,+DAA4D;AAChE;;AAEA;;;IAGI,sBAAsB;IACtB,SAAS;IACT,UAAU;IACV,sBAAsB;IACtB,+CAA+C;AACnD;;AAEA;IACI,gCAAgC;AACpC;;AAEA;IACI,4BAA4B;IAC5B,4CAA4C;IAC5C,4CAA4C;IAC5C,8BAA8B;IAC9B,4BAA4B;IAC5B,2BAA2B;AAC/B;;AAEA;IACI,yDAA0D;IAC1D,sBAAsB;IACtB,4BAA4B;IAC5B,kCAAkC;IAClC,4BAA4B,EAAE,mIAAmI;IACjK,8BAA8B,EAAE,8EAA8E;IAC9G,aAAa;IACb,uBAAuB;IACvB,iBAAiB;IACjB,gBAAgB;AACpB;;AAEA;IACI,2CAA2C;IAC3C,aAAa;IACb,cAAc;AAClB;;AAEA,mDAAmD;;AAEnD;IACI,eAAe;IACf,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,oBAAoB;IACpB,4CAA4C;IAC5C,eAAe;AACnB;;AAEA;IACI,8BAA8B;IAC9B,aAAa;IACb,mBAAmB;IACnB,8BAA8B;IAC9B,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,SAAS;AACb;;AAEA;IACI,uBAAuB;IACvB,YAAY;IACZ,eAAe;IACf,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA,8BAA8B;AAC9B;IACI,WAAW;IACX,kBAAkB;IAClB,WAAW;IACX,oBAAoB;IACpB,WAAW;IACX,SAAS;IACT,OAAO;IACP,iCAAiC;IACjC,8BAA8B;IAC9B,mCAAmC;AACvC;;AAEA;IACI,oBAAoB;IACpB,6BAA6B;AACjC;;;AAGA,0DAA0D;;AAE1D;IACI,uCAAuC;IACvC,wCAAwC;IACxC,kBAAkB;IAClB,kBAAkB;IAClB,aAAa;IACb,UAAU;IACV,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,gBAAgB;IAChB,mBAAmB;IACnB,iBAAiB;AACrB;;AAEA;IACI,iBAAiB;IACjB,mBAAmB;AACvB;;AAEA;IACI,+BAA+B;IAC/B,YAAY;IACZ,kBAAkB;IAClB,0BAA0B;IAC1B,eAAe;IACf,iBAAiB;IACjB,iBAAiB;IACjB,mBAAmB;IACnB,kBAAkB;IAClB,yBAAyB;AAC7B;;AAEA;IACI,iCAAiC;IACjC,mBAAmB;AACvB;;AAEA;;;;;;;;;;;;;;;;;;;;;GAqBG;;AAEH;IACI;QACI,sBAAsB;IAC1B;AACJ;;AAEA;IACI;QACI,yDAAyD;IAC7D;IACA;QACI,kBAAkB;IACtB;IACA;QACI,sBAAsB;IAC1B;IACA;QACI,YAAY;IAChB;IACA;QACI,eAAe;IACnB;IACA;QACI,eAAe;QACf,uBAAuB;IAC3B;IACA;QACI,iBAAiB;IACrB;IACA;QACI,eAAe;QACf,gBAAgB;IACpB;IACA;QACI,aAAa;QACb,iBAAiB;QACjB,UAAU;IACd;IACA;QACI,iBAAiB;IACrB;IACA;QACI,iBAAiB;QACjB,mBAAmB;QACnB,YAAY;IAChB;AACJ",sourcesContent:["@font-face {\n    font-family: 'Gideon Roman';\n    src: url('./fonts/GideonRoman-Regular.ttf') format('truetype'); \n}\n@font-face {\n    font-family: 'Redressed';\n    src: url('./fonts/Redressed-Regular.ttf') format('truetype'); \n}\n\n*,\n*::after,\n*::before {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n    color: var(--eggshell);\n    font-family: 'Gideon Roman', Helvetica, cursive;\n}\n\n*:focus {\n    outline: 4px dotted var(--brown);\n}\n\n:root {\n    --green: hsl(103deg 13% 39%);\n    --green-80-transp: hsl(103deg 13% 39% / 80%);\n    --green-90-transp: hsl(103deg 13% 39% / 90%);\n    --eggshell: hsl(23deg 87% 94%);\n    --orange: hsl(23deg 68% 75%);\n    --brown: hsl(23deg 27% 31%);\n}\n\nbody {\n    background-image: url(./images/background-img-desktop.jpg);\n    background-size: cover;\n    background-repeat: no-repeat;\n    background-position: center center;\n    background-attachment: fixed; /* Background image is fixed in the viewport so that it doesn’t move when the content’s height is greater than the image’s height */\n    background-color: var(--brown); /* background color that will be displayed while background image is loading */\n    display: flex;\n    justify-content: center;\n    min-height: 100vh; \n    min-width: 100vw;\n} \n\n#content {\n    background-color: hsl(0deg 100% 100% / 60%);\n    width: 1000px;\n    max-width: 85%;\n}\n\n/* -------------------NAVBAR--------------------- */\n\n.logo-container {\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n}\n\n.logo-container img {\n    height: 80px;\n}\n\nh1 {\n    color: var(--orange);\n    font-family: 'Redressed', Helvetica, cursive;\n    font-size: 4rem;\n}\n\nheader {\n    background-color: var(--green);\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 20px 35px;\n}\n\n.menu {\n    display: flex;\n    gap: 20px;\n}\n\n.nav-link {\n    background: transparent;\n    border: none;\n    cursor: pointer;\n    font-size: 1.6rem;\n    position: relative;\n}\n\n/* underline hover animation */\n.nav-link::after {\n    content: '';\n    position: absolute;\n    width: 100%;\n    transform: scaleX(0);\n    height: 2px;\n    bottom: 0;\n    left: 0;\n    background-color: var(--eggshell);\n    transform-origin: bottom right;\n    transition: transform 0.25s ease-in;\n}\n\n.nav-link:hover::after {\n    transform: scaleX(1);\n    transform-origin: bottom left;\n}\n\n\n/* ----------------------WELCOME-BOX-------------------- */\n\n.welcome-box {\n    background-color:var(--green-80-transp);\n    border: 6px solid var(--green-90-transp);\n    border-radius: 5px;\n    text-align: center;\n    padding: 20px;\n    width: 80%;\n    max-width: 700px;\n    margin: 100px auto;\n}\n\nh2 {\n    margin-top: 25px;\n    margin-bottom: 20px;\n    font-size: 2.5rem;\n}\n\n.welcome-box p {\n    font-size: 1.5rem;\n    margin-bottom: 25px;\n}\n\n.welcome-box button {\n    background-color: var(--orange);\n    border: none;\n    border-radius: 3px;\n    color: hsl(103deg 13% 28%);\n    cursor: pointer;\n    font-size: 1.7rem;\n    font-weight: bold;\n    margin-bottom: 25px;\n    padding: 15px 10px;\n    transition: 300ms ease-in;\n}\n\n.welcome-box button:hover {\n    background-color: var(--eggshell);\n    color: var(--green);\n}\n\n/* footer {\n    text-align: center;\n    font-weight: 300;\n}\n\n.attribution {\n    padding: 20px 0 10px 0;\n    font-size: 0.875rem;\n}\n\n\n.credit,\n.credit a {\n    font-size: 0.625rem; \n    padding: 5px;\n}\n\nfooter a {\n    font-style: italic;\n    font-weight: 400;\n    color: #cddef8;\n} */\n\n@media (max-width: 991px) {\n    header {\n        flex-direction: column;\n    }\n}\n\n@media (max-width: 767px) {\n    body {\n        background-image: url(./images/background-img-mobile.jpg);\n    }\n    header {\n        padding: 15px 25px;\n    }\n    .logo-container {\n        flex-direction: column;\n    }\n    .logo-container img {\n        height: 50px;\n    }\n    h1 {\n        font-size: 3rem;\n    }\n    .menu {\n        flex-wrap: wrap;\n        justify-content: center;\n    }\n    .nav-link {\n        font-size: 1.4rem;\n    }\n    h2 {\n        font-size: 2rem;\n        margin-top: 10px;\n    }\n    .welcome-box {\n        padding: 10px;\n        margin: 40px auto;\n        width: 90%;\n    }\n    .welcome-box p {\n        font-size: 1.3rem;\n    }\n    .welcome-box button {\n        font-size: 1.5rem;\n        margin-bottom: 15px;\n        padding: 5px;\n    }\n}"],sourceRoot:""}]);const h=m},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var A=0;A<this.length;A++){var c=this[A][0];null!=c&&(i[c]=!0)}for(var s=0;s<n.length;s++){var d=[].concat(n[s]);o&&i[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),r&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=r):d[4]="".concat(r)),e.push(d))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var a={},i=[],A=0;A<n.length;A++){var c=n[A],s=o.base?c[0]+o.base:c[0],d=a[s]||0,l="".concat(s," ").concat(d);a[s]=d+1;var u=t(l),m={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)e[u].references++,e[u].updater(m);else{var p=r(m,o);o.byIndex=A,e.splice(A,0,{identifier:l,updater:p,references:1})}i.push(l)}return i}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var a=o(n=n||[],r=r||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var A=t(a[i]);e[A].references--}for(var c=o(n,r),s=0;s<a.length;s++){var d=t(a[s]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}a=c}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},920:(n,e,t)=>{n.exports=t.p+"a63a077548c774e2bdc9.ttf"},933:(n,e,t)=>{n.exports=t.p+"6906003e71fba0eba09a.ttf"},673:(n,e,t)=>{n.exports=t.p+"6a1644bcf17e9b7161e5.jpg"},391:(n,e,t)=>{n.exports=t.p+"6eb04df5f96775db5f77.jpg"}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var a=e[o]={id:o,exports:{}};return n[o](a,a.exports,t),a.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");o.length&&(n=o[o.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,(()=>{var n=t(379),e=t.n(n),o=t(795),r=t.n(o),a=t(569),i=t.n(a),A=t(565),c=t.n(A),s=t(216),d=t.n(s),l=t(589),u=t.n(l),m=t(28),p={};p.styleTagTransform=u(),p.setAttributes=c(),p.insert=i().bind(null,"head"),p.domAPI=r(),p.insertStyleElement=d(),e()(m.Z,p),m.Z&&m.Z.locals&&m.Z.locals;function g(n,e){const t=document.createElement("button");return t.innerText=n,t.id=e,t.classList.add("nav-link"),t}const f=function(){const n=document.querySelector("main");return n.textContent="",n.append(function(){const n=document.createElement("div");n.classList.add("welcome-box");const e=document.createElement("h2");e.innerText="Welcome, weary traveller!";const t=document.createElement("button");return t.innerText="Look at what we have to offer",t.type="button",n.append(e,C("Whatever ailment plagues you, be assured, we got a cure. Our treatments range from medicinal teas over healing herbs and soothing ointments to magic potions."),C("Whether you suffer from a headache, a flesh wound or food poisoning — we have the remedy to provide you with sweet relief."),t),n}())};function C(n){const e=document.createElement("p");return e.innerText=n,e}function h(n){if(n.classList.contains("current"))return;const e=document.querySelector(".logo-container");e!==n&&e.classList.remove("current"),document.querySelectorAll(".nav-link").forEach((e=>{e!=n&&e.classList.remove("current")})),n.classList.add("current")}(function(){const n=document.getElementById("content"),e=document.createElement("main");n.append(function(){const n=document.createElement("header"),e=document.createElement("div");e.classList.add("logo-container"),e.tabIndex=0;const t=document.createElement("nav");t.classList.add("menu");const o=document.createElement("h1");o.innerText="Sweet Relief";const r=document.createElement("img");return r.src="../src/images/sweet-relief-logo.png",r.alt="a mortar and pestle: the sweet relief logo",e.append(o,r),t.append(g("Our Remedies","remedies"),g("About","about"),g("Contact","contact")),n.append(e,t),n}(),e)})(),f(),document.querySelector(".logo-container").classList.add("current"),function(){const n=document.querySelector(".logo-container"),e=document.getElementById("remedies"),t=document.getElementById("about"),o=document.getElementById("contact");n.addEventListener("click",(n=>{h(n.currentTarget),n.currentTarget.classList.contains("current")&&f()})),e.addEventListener("click",(n=>{h(n.target),n.target.classList.contains("current")&&function(){const n=document.querySelector("main");n.textContent="",n.append(function(){const n=document.createElement("h1");return n.innerText="Remedies",n}())}()})),t.addEventListener("click",(n=>{h(n.target),n.target.classList.contains("current")&&function(){const n=document.querySelector("main");n.textContent="",n.append(function(){const n=document.createElement("h1");return n.innerText="About",n}())}()})),o.addEventListener("click",(n=>{h(n.target),n.target.classList.contains("current")&&function(){const n=document.querySelector("main");n.textContent="",n.append(function(){const n=document.createElement("h1");return n.innerText="Contact",n}())}()}))}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,